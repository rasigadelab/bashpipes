manifest {
    description = 'HCL-IAI, Bacteria Phylogeny Pipeline'
}

params {
    nfpath = 'Nextflow_scripts/src'
    help = false
}

process {
    withLabel : mash {
        container = "src/singularity/mash.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 40
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : r_analysis {
        container = "src/singularity/r_analysis.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 40
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : map_and_sort {
        container = "src/singularity/map_and_sort.sif"
        memory = '4GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : pilon {
        container = "src/singularity/pilon.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : repeatmasker {
        container = "src/singularity/repeatmasker.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : bedops {
        container = "src/singularity/bedops.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : python_tab_creation {
        container = "src/singularity/python_tab_creation.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : snippy {
        container = "src/singularity/snippy.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : iqtree {
        container = "src/singularity/iqtree.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : clonalframeml {
        container = "src/singularity/clonalframeml.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 2
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : gubbins {
        container = "src/singularity/gubbins.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : iqtree_snp_dist {
        container = "src/singularity/iqtree_snp_dist.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : treetime {
        container = "src/singularity/treetime.sif"
        memory = '200GB'
        cpus = 48
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : highCPU {
        maxForks = 16
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

    withLabel : lowCPU {
        memory = '2GB'
        cpus = 1
        maxForks = 40
        errorStrategy = { task.exitStatus == 255 ? 'retry' : 'terminate' }
        maxRetries = 5 
    }

}

profiles {
    standard {
        process.executor = 'local'
        process.cpus = 48
        process.memory = '200GB'
    }

    developer {
        process.executor = 'local'
        process.cpus = 8
        process.memory = '2GB'
    }

}

singularity {
    enabled = true
    autoMount = false
    runOptions = '--bind ./40.Phylogeny_pipeline,/run/shm:/run/shm'
}
